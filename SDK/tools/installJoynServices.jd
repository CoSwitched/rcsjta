page.title=Install joyn standalone service
doc.type=tools
@jd:body
<div class="background-sdk">
	<div class="content-block" style="min-height:700px;">
		<div class="intro center">
			<p><h1>Install and configure joyn standalone service</h1></p>
			<p><span>Some devices the are not yet joyn compliant, so it is necessary to instal a standalone joyn service on your device before using the joyn APIs on your application. The joyn SDK provides a joyn-service test application. Once these services are configured appropriately, your application will be able to communicate via joyn APIs and joyn network.</span></p>
		</div>
		<div class="content-body center">
			<div class="guide-block">
					<p><h2>1. Install the standalone joyn service on your device</h2></p>								
					<p>To install the application, connect your device via USB. Make sure that USB debugging is active.</p>
					<p>Then use the following command:</p>
					<p><code style="background-color:#e1e1e1;">adb install &lt;SDK&gt;\tools\joyn-core.apk</code> </p>
					<p>Get more information on the adb tool <a href="http://developer.android.com/tools/help/adb.html" target="_blank">here</a></p>
					<p>Once joyn-core.apk installed, there will be two new applications present on your device:</p>
					<ul>
						<li>
							<p>The joyn service, an Android background service delivering the joyn service.</p>
						</li>
						<li>
							<p>The joyn provisioning tool which allows you to configure your joyn service and end user profile.</p>
						</li>
					</ul>
			</div>
			</br>
			<div class="guide-block">
				<p><h2>2. Configure the joyn service</h2></p>
				<p>There are 2 ways of provisioning your joyn client: Automatic and Manual. By default the manual provisioning is activated.
				<p><h3>Automatic provisioning</h3></p>
				<div style="width:100%;display:inline-block;margin-bottom:15px">
					<div style="width:60%;float:right;margin:75px 5% 0 0">
						<p>First open the application named <b>Provisioning</b> and go to the second tab named <b>Stack</b>.</p>
						<p>Select <b>HTTPS</b> as <b>Auto config mode</b> option and press <b>Save</b>.</p>
					</div>
					<div class="img-ssh">
						<img src="{@docRoot}assets-sdk/images/tuto_ss_prov.png" width="100%"  />
					</div>
				</div>
				<p>Then restart the joyn service (see step 3).</p>
				</br>
				<p><h3>Manual provisioning</h3></b></p>
				<p>Return to <b>Provisioning</b> application and go to the second tab named <b>Stack</b>.</p>
				<p>Select <b>none</b> as <b>Auto config mode</b> option and press <b>Save</b>.</p>
				<div style="width:100%;display:inline-block;margin-bottom:15px">
					<div style="width:60%;float:right;margin:75px 5% 0 0">
						<p>Now go to the first tab named <b>Profile</b>.</p>
						<p>Press <b>Generate profile</b>.</p>
						<p>Fill-in the form as asked by entering your phone number, then by selecting the joyn platform you are <b>supposed</b> to connect to.</p>
						<p>Press <b>OK</b> and press <b>Save</b> to validate your config.</p>
					</div>
					<div class="img-ssh">
						<img src="{@docRoot}assets-sdk/images/tuto_ss_prov2.png" width="100%"  />
					</div>
				</div>
				<p>Then restart the joyn service (see step 3).</p>				
				</br>			
			</div>
			</br>
			<div class="guide-block">
				<p><h2>3. Start the joyn service</h2></p>
				<div style="width:100%;display:inline-block;">
					<div class="img-ssh" style="float:right;">
						<img src="{@docRoot}assets-sdk/images/tuto_ss_settings.png" width="100%"  />
					</div>
					<div style="width:60%;float:left;margin:75px 5% 0 0">
						<p>The joyn service is started automatically at device boot or via its settings Activity: see checkbox "joyn Service".</p>
					</div>
				</div>
				</br>
			</div>
			</br>
			<div class="guide-block">
				<p><h2>4. Debugging</h2></p>
				<div style="width:100%;display:inline-block;">
					<p>The internal traces of the joyn service may be activated from the <b>Provisioning application</b> via the <b>Logger</b> tab:</p>
					<p></p>
					<div style="width:200px;margin:auto;">
						<img src="{@docRoot}assets-sdk/images/tuto_ss_logger.png" width="100%"  />
					</div>
					<p></p>
					<p>The option <b>Application traces</b> and <b>Trace level</b> allows one to generate logcat traces on the Device: joyn traces always starts with the following prefix “<b>[RCS]</b>”.</p>
					<p>You can also activate <b>SIP traces</b> which are sent to SDTOUT and also stored into a file on the SDCARD.</p>
					<p>You can also activate <b>Media traces</b> which are sent to SDTOUT. Media traces only concerns MSRP protocol.</p>
					<p>For SDTOUT traces, you can create a filter with DDMS tool: </p>
					<p></p>
					<div style="width:450px;margin:auto;">
						<img src="{@docRoot}assets-sdk/images/tuto_ss_logfilter.png" width="100%"  />
					</div>
					<p></p>
				</div>
				</br>
			</div>
			</br>
		</div>
		
	</div>
</div>